{"version":3,"sources":["header.js","form.js","footer.js","results.js","App.js","index.js"],"names":["Header","React","Component","Form","props","handleSubmit","e","preventDefault","radioSelection","target","routeType","value","setState","urlInput","url","display","getResults","a","method","fetch","mode","then","response","status","json","apiResponse","console","log","results","provideResults","state","onSubmit","this","id","type","name","data-testId","Footer","Results","src","headers","data-testID","count","App","updateResults","apiResults","newCount","length","apiBody","apiHeaders","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAaeA,G,6KARX,OACE,iCACE,6C,GAJaC,IAAMC,Y,wBC2FZC,G,wDA1Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,aAAe,SAAAC,GACbA,EAAEC,iBACF,IAAIC,EAAiBF,EAAEG,OAAOC,UAAUC,MACxC,EAAKC,SAAS,CAAEF,UAAWF,IAE3B,IAAIK,EAAWP,EAAEG,OAAOK,IAAIH,MAC5B,EAAKC,SAAS,CAAEE,IAAKD,IAMrB,EAAKD,SAAS,CAAEG,SAAS,IAEzB,EAAKC,WAAWR,EAAgBK,IAxBf,EA2BnBG,WA3BmB,sBA2BN,4CAAAC,EAAA,6DAAOC,EAAP,+BAAc,MAAOJ,EAArB,gCACeK,MAAML,EAAK,CAAEI,OAAO,GAAD,OAAKA,GAAUE,KAAM,SACjEC,MAAK,SAAAC,GACJ,GAAsB,MAAnBA,EAASC,OAUZ,OAAOD,EAASE,UAbP,OACLC,EADK,OAgBXC,QAAQC,IAAK,uBAAwBF,EAAYG,SAEjD,EAAKxB,MAAMyB,eAAeJ,EAAYG,SAlB3B,2CAzBX,EAAKE,MAAQ,CACXf,SAAS,EACTL,UAAW,yBACXI,IAAK,mBALU,E,qDAiDjB,OACE,qCACE,sBAAMiB,SAAUC,KAAK3B,aAArB,SACE,qCACE,kCACE,uBAAO4B,GAAG,WAAWC,KAAK,QAAQC,KAAK,YAAYxB,MAAM,QAD3D,SAIA,kCACE,uBAAOsB,GAAG,YAAYC,KAAK,QAAQC,KAAK,YAAYxB,MAAM,SAD5D,UAIA,kCACE,uBAAOsB,GAAG,WAAWC,KAAK,QAAQC,KAAK,YAAYxB,MAAM,QAD3D,SAIA,kCACE,uBAAOsB,GAAG,cAAcC,KAAK,QAAQC,KAAK,YAAYxB,MAAM,WAD9D,YAIA,0BAASsB,GAAG,gBAAZ,UACE,yCAEE,uBAAOA,GAAG,WAAWC,KAAK,OAAOC,KAAK,WAExC,wBAAQC,cAAY,eAAeF,KAAK,SAAxC,iCAKJF,KAAKF,MAAMf,QACb,8BACE,0BAASkB,GAAG,gBAAZ,UAA6BD,KAAKF,MAAMpB,UAAxC,KAAqDsB,KAAKF,MAAMhB,SAF3C,U,GAhFZb,IAAMC,YCUVmC,G,6KARX,OACE,sD,GAHepC,IAAMC,Y,wBCoBZoC,E,uKAhBX,OADAZ,QAAQC,IAAI,2BAA4BK,KAAK5B,OAE3C,qCACE,0BAAS6B,GAAG,iBAAZ,UACE,kDACA,cAAC,IAAD,CAAWM,IAAKP,KAAK5B,MAAMoC,aAE7B,0BAASP,GAAG,sBAAZ,UACE,+CACA,cAAC,IAAD,CAAWM,IAAKP,KAAK5B,MAAMwB,UAC3B,wCAAU,sBAAMa,cAAY,QAAlB,SAA2BT,KAAK5B,MAAMsC,qB,GAZpCzC,IAAMC,WC0CbyC,G,wDApCb,WAAavC,GAAQ,IAAD,8BAClB,cAAMA,IAQRwC,cAAgB,SAACC,GACf,IAAIC,EAAWD,EAAWE,OAEtBC,EAAUH,EACdnB,QAAQC,IAAI,qBAAsBmB,GAClC,EAAKlC,SAAS,CAAE4B,QAHZS,YAIJ,EAAKrC,SAAS,CAAEgB,QAASoB,IACzB,EAAKpC,SAAS,CAAE8B,MAAOI,KAdvB,EAAKhB,MAAQ,CACXY,MAAO,EACPd,QAAS,GACTY,QAAS,IALO,E,qDAoBlB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEX,eAAgBG,KAAKY,gBAEvB,cAAC,EAAD,CACAhB,QAASI,KAAKF,MAAMF,QACpBc,MAAOV,KAAKF,MAAMY,QAElB,cAAC,EAAD,W,GA/BUzC,IAAMC,YCLxBgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.645ae2cf.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nclass Header extends React.Component {\n  render(){\n    return(\n      <header>\n        <h1>RESTy</h1>\n      </header>\n    );\n  }\n};\n\nexport default Header;","import React from 'react';\nimport './form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: false,\n      routeType: 'No route type selected',\n      url: 'No URL provided'\n      //define routeType and url as arrays if they need to hold multiple states, use this.setState.push ({ key: data}), to add states to the arrays\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let radioSelection = e.target.routeType.value;\n    this.setState({ routeType: radioSelection });\n\n    let urlInput = e.target.url.value;\n    this.setState({ url: urlInput });\n\n    // console.log({radioSelection}, {urlInput});\n    // console.log('this.state.url ', this.state.url, 'this.state.routeType ', this.state.routeType);\n    // console.log('this.state ', this.state);\n\n    this.setState({ display: true });\n\n    this.getResults(radioSelection, urlInput);\n  }\n\n  getResults = async (method='GET', url) => {\n    const apiResponse = await fetch(url, { method: `${method}`, mode: 'cors' })\n    .then(response => {\n      if(response.status !==200)return;\n      // response.headers.forEach(item => {\n      //   console.log('item entries ', item);\n      // })\n      // console.log('headers@0 ', response.headers[1]);\n      // console.log('headers ', response.headers.entries());\n      // for( let pair of response.headers.entries ){\n      //   console.log(pair[0]+ ': '+ pair[1]);\n      // }\n      \n      return response.json();\n    });\n\n    console.log ('apiResponse.results ', apiResponse.results);\n\n    this.props.provideResults(apiResponse.results);\n  }\n\n  render(){\n    return(\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <fieldset>\n            <label>\n              <input id=\"getRadio\" type=\"radio\" name=\"routeType\" value=\"GET\" />\n              GET\n            </label>\n            <label>\n              <input id=\"postRadio\" type=\"radio\" name=\"routeType\" value=\"POST\" />\n              POST\n            </label>\n            <label>\n              <input id=\"putRadio\" type=\"radio\" name=\"routeType\" value=\"PUT\" />\n              PUT\n            </label>\n            <label>\n              <input id=\"deleteRadio\" type=\"radio\" name=\"routeType\" value=\"DELETE\" />\n              DELETE\n            </label>\n            <section id=\"buttonSection\"> \n              <label>\n                URL: \n                <input id=\"urlInput\" type='text' name=\"url\" />\n              </label>\n              <button data-testId=\"submitButton\" type=\"submit\" >Make it so.</button>\n            </section>\n          </fieldset>\n        </form>\n        \n        {!this.state.display ? '' : \n        <div>\n          <section id=\"outputSection\">{this.state.routeType}: {this.state.url}</section>\n        </div>\n        }\n\n      </>\n    );\n  }\n};\n\nexport default Form;","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component {\n  render(){\n    return(\n      <footer>\n        &copy; 2021 SP\n      </footer>\n    );\n  }\n};\n\nexport default Footer;","import React from 'react';\nimport './results.scss';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n  render(){\n    console.log('this.props results page ', this.props);\n    return(\n      <>\n        <section id=\"headersSection\">\n          <h3>Response Headers</h3>\n          <ReactJson src={this.props.headers} />\n        </section>\n        <section id=\"responseBodySection\">\n          <h3>Response Body</h3>\n          <ReactJson src={this.props.results} />\n          <p>Count: <span data-testID=\"count\">{this.props.count}</span></p>\n        </section>\n      </>\n    );\n  }\n};\n\nexport default Results;","import React from 'react';\n\n// import './app.scss';\nimport Header from './header.js';\nimport Form from './form.js';\nimport Footer from './footer.js';\nimport Results from './results.js';\nimport './app.scss';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      count: 0,\n      results: [],\n      headers: [],\n    }\n  }\n\n  updateResults = (apiResults) => {\n    let newCount = apiResults.length;\n    let apiHeaders;\n    let apiBody = apiResults;\n    console.log('length of results ', newCount);\n    this.setState({ headers: apiHeaders })\n    this.setState({ results: apiBody });\n    this.setState({ count: newCount });\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Form \n          provideResults={this.updateResults}\n        />\n        <Results \n        results={this.state.results}\n        count={this.state.count}\n        />\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}