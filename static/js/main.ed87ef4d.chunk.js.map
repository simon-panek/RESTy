{"version":3,"sources":["header.js","form.js","footer.js","results.js","history.js","App.js","index.js"],"names":["Header","React","Component","Form","props","handleSubmit","e","preventDefault","radioSelection","target","routeType","value","setState","urlInput","url","display","getResults","a","method","fetch","mode","then","response","status","headers","entries","pair","giveAppHeaders","json","apiResponse","provideResults","results","giveAppMethodUrl","console","log","state","onSubmit","this","id","type","name","data-testId","Footer","Results","src","data-testid","count","History","searches","map","search","App","collectHeaders","updateResults","apiResults","newCount","length","apiBody","apiHeaders","storeUrlMethod","newSearch","duplicateCheck","forEach","runPreviousSearch","giveAppPreviousSearch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed87ef4d.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nclass Header extends React.Component {\n  render(){\n    return(\n      <header>\n        <h1>RESTy</h1>\n      </header>\n    );\n  }\n};\n\nexport default Header;","import React from 'react';\nimport './form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: false,\n      routeType: 'No route type selected',\n      url: 'No URL provided',\n      method: ''\n      //define routeType and url as arrays if they need to hold multiple states, use this.setState.push ({ key: data}), to add states to the arrays\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let radioSelection = e.target.routeType.value;\n    this.setState({ routeType: radioSelection });\n\n    let urlInput = e.target.url.value;\n    this.setState({ url: urlInput });\n\n    // console.log({radioSelection}, {urlInput});\n    // console.log('this.state.url ', this.state.url, 'this.state.routeType ', this.state.routeType);\n    // console.log('this.state ', this.state);\n\n    this.setState({ display: true });\n\n    this.getResults(radioSelection, urlInput);\n  }\n\n  getResults = async (method='GET', url) => {\n\n    switch(method) {\n      case 'GET':\n        const apiResponse = await fetch(url, { method: `${method}`, mode: 'cors' })\n          .then(response => {\n          if(response.status !==200)return;\n          let headers = {};\n          for (let pair of response.headers.entries()) {\n            headers[pair[0]] = pair[1];\n          }\n\n          this.props.giveAppHeaders(headers);\n          let results = response.json();\n          return results;\n        });\n\n        this.props.provideResults(apiResponse.results);\n\n        if(apiResponse.results){\n          this.props.giveAppMethodUrl(method, url);\n        }\n\n        break;\n\n      case 'POST':\n        fetch(url, {\n        \"method\": `${method}`,\n        \"body\": {\n            \"title\": \"title test\",\n            \"content\": \"content test\",\n            \"userId\": 1,\n            \"categoryId\": 4,\n            // \"imageUrl\": \"https://i.picsum.photos/id/866/700/400.jpg\"\n        },\n        // \"headers\": {\n        //     \"Content-type\": \"application/json; charset=UTF-8\"\n        // }\n        })\n        .then(response => response.json())\n        .then(json => console.log(json))\n\n        break;\n\n      case 'PUT':\n        console.log('In Switch PUT')\n        //put fake api PUT here\n        break;\n\n     case 'DELETE':\n        console.log('In Switch DELETE')\n        //put fake api DELETE here\n    }\n    \n    \n  }\n\n  render(){\n    return(\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <fieldset>\n            <label>\n              <input id=\"getRadio\" type=\"radio\" name=\"routeType\" value=\"GET\" />\n              GET\n            </label>\n            <label>\n              <input id=\"postRadio\" type=\"radio\" name=\"routeType\" value=\"POST\" />\n              POST\n            </label>\n            <label>\n              <input id=\"putRadio\" type=\"radio\" name=\"routeType\" value=\"PUT\" />\n              PUT\n            </label>\n            <label>\n              <input id=\"deleteRadio\" type=\"radio\" name=\"routeType\" value=\"DELETE\" />\n              DELETE\n            </label>\n            <section id=\"buttonSection\"> \n              <label>\n                URL: \n                <input id=\"urlInput\" type='text' name=\"url\" />\n              </label>\n              <button data-testId=\"submitButton\" type=\"submit\" >Make it so.</button>\n            </section>\n          </fieldset>\n        </form>\n        \n        {!this.state.display ? '' : \n        <div>\n          <section id=\"outputSection\">{this.state.routeType}: {this.state.url}</section>\n        </div>\n        }\n\n      </>\n    );\n  }\n};\n\nexport default Form;","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component {\n  render(){\n    return(\n      <footer>\n        &copy; 2021 SP\n      </footer>\n    );\n  }\n};\n\nexport default Footer;","import React from 'react';\nimport './results.scss';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n  render(){\n    console.log('this.props results page ', this.props);\n    return(\n      <div id=\"resultsDiv\">\n        <section id=\"headersSection\">\n          <h3>Response Headers</h3>\n          <ReactJson src={this.props.headers} />\n        </section>\n        <section id=\"responseBodySection\">\n          <h3>Response Body</h3>\n          <ReactJson src={this.props.results} />\n          <p>Count: <span data-testid=\"count\">{this.props.count}</span></p>\n        </section>\n      </div>\n    );\n  }\n};\n\nexport default Results;","import React from 'react';\nimport './history.scss';\nimport ReactJson from 'react-json-view';\n\n\nclass History extends React.Component {\n\n  render(){\n    \n    return(\n      <div id=\"historyDiv\">\n        {this.props.searches.map(search => {\n          return ( \n          <p>{search.method} {search.url}</p> \n          )\n            // make ths a link or a button so that it will send the method and url back to App.js and then send the new request\n        })}\n      </div>\n    );\n  }\n};\n\nexport default History;","import React from 'react';\n\n// import './app.scss';\nimport Header from './header.js';\nimport Form from './form.js';\nimport Footer from './footer.js';\nimport Results from './results.js';\nimport History from './history.js';\nimport './app.scss';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      count: 0,\n      results: [],\n      headers: [],\n      searches: []\n    }\n  }\n\n  collectHeaders = (headers) => {\n    this.setState({ headers });\n  }\n\n  updateResults = (apiResults) => {\n    let newCount = apiResults.length;\n    // let apiHeaders;\n    let apiBody = apiResults;\n    console.log('length of results ', newCount);\n    // this.setState({ headers: apiHeaders })\n    this.setState({ results: apiBody });\n    this.setState({ count: newCount });\n  }\n\n  collectHeaders = (apiHeaders) => {\n    this.setState({headers: apiHeaders});\n  }\n\n  storeUrlMethod = (method, url) => {\n    let newSearch = { method, url }; //create a new object from the method and url { method: method, url: url }\n    let duplicateCheck = 0;\n    this.state.searches.forEach(search => {\n      if(search[0] === method && search[1] === url){\n        duplicateCheck = 1;\n        console.log('duplicateCheck in forEach ', duplicateCheck);\n      }\n    })\n    console.log('duplicateCheck after forEach ', duplicateCheck);\n\n    if(duplicateCheck !== 1) {\n      // this.setState({ searches: this.state.searches.concat([method, url])})\n      // this.setState( prevState => ({ \n      //   searches: [...prevState.searches, [method, url]]\n      this.setState({ searches: [...this.state.searches, newSearch]}) //takes all existing search content and adds on newSearch\n      // })\n    }\n    \n  }\n\n  runPreviousSearch = () => {\n\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Form \n          provideResults={this.updateResults}\n          giveAppHeaders={this.collectHeaders}\n          giveAppMethodUrl={this.storeUrlMethod}\n        />\n        <Results \n        headers={this.state.headers}\n        results={this.state.results}\n        count={this.state.count}\n        />\n        <History \n         searches = {this.state.searches}\n         giveAppPreviousSearch\n        />\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}